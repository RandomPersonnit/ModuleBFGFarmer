# ---------------------------------------------------------------------------------
#  /\_/\  üåê This module was loaded through https://t.me/hikkamods_bot
# ( o.o )  üîì Not licensed.
#  > ^ <   ‚ö†Ô∏è Owner of heta.hikariatama.ru doesn't take any responsibilities or intellectual property rights regarding this script
# ---------------------------------------------------------------------------------
# Name: AKFarmer
# Description: Send mes
# Author: @Tirandomperson
# Commands:
# .akon | .akoff
# ---------------------------------------------------------------------------------


# meta developer: @Tirandomperson

import time

from telethon.tl.types import MessageEntityMentionName
from asyncio import sleep

from telethon import events
from .. import loader, utils


def register(cb):
    cb(AKFarmerMod())

class AKFarmerMod(loader.Module):
    """Send messages periodically"""

    strings = {"name": "AKFarmer"}

    async def client_ready(self, client, db):
        self.events = []
        self.db = db

    async def watcher(self, message):
        if self.db.get("AKFarmer", "status1") and message.sender_id in self.db.get("AKFarmer", "whitelist", []):
            if "–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É" in message.message:
                self.db["AKFarmer", "waituntil"] = time.time() + 14400
                await message.respond("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É")

    async def akoncmd(self, message):
        """Start the farm"""
        if not self.db.get("AKFarmer", "status1"):
            self.db.set("AKFarmer", "status1", True)
            self.db.set("AKFarmer", "whitelist", [])
            await utils.answer(message, "<b>‚úÖ –ó–∞–ø—É—â–µ–Ω–æ</b>")
            while self.db.get("AKFarmer", "status1"):
                if time.time() > self.db.get("AKFarmer", "waituntil", 0):
                    await message.respond("–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É")
                await sleep(60 * 5)
        else:
            await utils.answer(message, "<b>‚ö†Ô∏è –§–∞—Ä–º —É–∂–µ –∑–∞–ø—É—â–µ–Ω</b>")

    async def akoffcmd(self, message):
        """Stop the farm"""
        if self.db.get("AKFarmer", "status1"):
            self.db.set("AKFarmer", "status1", False)
            await utils.answer(message, "<b>‚ùå –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ</b>")
        else:
            await utils.answer(message, "<b>‚ö†Ô∏è –§–∞—Ä–º –Ω–µ –∑–∞–ø—É—â–µ–Ω</b>")

    async def notifcmd(self, message):
        """Add a user to the whitelist"""
        if not self.db.get("AKFarmer", "whitelist", []):
            self.db.set("AKFarmer", "whitelist", [])
        for user in message.mentioned:
            if user.id not in self.db.get("AKFarmer", "whitelist"):
                self.db.get("AKFarmer", "whitelist").append(user.id)
        await utils.answer(message, "<b>‚úîÔ∏è –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ</b>")

    async def cmds(self, message):
        """Remove a user from the whitelist"""
        if not self.db.get("AKFarmer", "whitelist", []):
            self.db.set("AKFarmer", "whitelist", [])
        for user in message.mentioned:
            if user.id in self.db.get("AKFarmer", "whitelist"):
                self.db.get("AKFarmer", "whitelist").remove(user.id)
        await utils.answer(message, "<b>‚úîÔ∏è –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ</b>")
