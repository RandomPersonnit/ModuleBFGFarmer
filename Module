# ---------------------------------------------------------------------------------
#  /\_/\  üåê This module was loaded through https://t.me/hikkamods_bot
# ( o.o )  üîì Not licensed.
#  > ^ <   ‚ö†Ô∏è Owner of heta.hikariatama.ru doesn't take any responsibilities or intellectual property rights regarding this script
# ---------------------------------------------------------------------------------
# Name: BFGAuto
# Description: Send mes
# Author: @Tirandomperson
# Commands:
# .bonso | .bonsl | .bonna
# ---------------------------------------------------------------------------------


# meta developer: @Tirandomperson

import asyncio
from hikkatl import types
from telethon import functions, events

from .. import loader, utils


@loader.tds
class SendMessageModule(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∞—Ä–º–∞ —Å–Ω–µ–∂–∏–Ω–æ–∫ –∏ —Å–Ω–µ–∂–∫–æ–≤ –∫–∞–∂–¥—ã–π —á–∞—Å"""

    strings = {"name": "BFGAuto"}

    def __init__(self):
        self.running_sobrat = False
        self.running_slepit = False
        self.running_nayti = False
        self.success_message = "<b>üèó–£—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ<b>"
        self.already_running_sobrat_message = "‚ùåÔ∏è–£–∂–µ –∑–∞–ø—É—â–µ–Ω–æ –∫–æ–º–∞–Ω–¥—É '–°–æ–±—Ä–∞—Ç—å —Å–Ω–µ–∂–∏–Ω–∫–∏'"
        self.already_running_slepit_message = "‚ùåÔ∏è–£–∂–µ –∑–∞–ø—É—â–µ–Ω–æ –∫–æ–º–∞–Ω–¥—É '–°–ª–µ–ø–∏—Ç—å —Å–Ω–µ–∂–æ–∫'"
        self.already_running_nayti_message = "‚ùåÔ∏è–£–∂–µ –∑–∞–ø—É—â–µ–Ω–æ –∫–æ–º–∞–Ω–¥—É '–ù–∞–π—Ç–∏ —Å–Ω–µ–∂–∏–Ω–∫–∏'"

    @loader.unrestricted
    async def bboncmd(self, message: types.Message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–º–∞–Ω–¥—ã '–°–æ–±—Ä–∞—Ç—å —Å–Ω–µ–∂–∏–Ω–∫–∏' –∫–∞–∂–¥—ã–µ 50 –º–∏–Ω—É—Ç"""
        if self.running_sobrat:
            await utils.answer(message, self.already_running_sobrat_message)
            return
        self.running_sobrat = True

        await utils.answer(message, self.success_message)

        while self.running_sobrat:
            await message.client(functions.messages.SendMessageRequest(
                peer='@bforgame_bot',
                message='–°–æ–±—Ä–∞—Ç—å —Å–Ω–µ–∂–∏–Ω–∫–∏'
            ))
            await asyncio.sleep(50 * 60)

    @loader.unrestricted
    async def bboffcmd(self, message: types.Message):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–º–∞–Ω–¥—ã '–°–æ–±—Ä–∞—Ç—å —Å–Ω–µ–∂–∏–Ω–∫–∏'"""
        if not self.running_sobrat:
            await utils.answer(message, "‚ùåÔ∏è–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã '–°–æ–±—Ä–∞—Ç—å —Å–Ω–µ–∂–∏–Ω–∫–∏' —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
            return
        self.running_sobrat = False
        await utils.answer(message, "‚úîÔ∏è–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã '–°–æ–±—Ä–∞—Ç—å —Å–Ω–µ–∂–∏–Ω–∫–∏' –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

    @loader.unrestricted
    async def bonslcmd(self, message: types.Message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–º–∞–Ω–¥—ã '–°–ª–µ–ø–∏—Ç—å —Å–Ω–µ–∂–æ–∫' –∫–∞–∂–¥—ã–µ 50 –º–∏–Ω—É—Ç"""
        if self.running_slepit:
            await utils.answer(message, self.already_running_slepit_message)
            return
        self.running_slepit = True

        await utils.answer(message, self.success_message)

        while self.running_slepit:
            await message.client(functions.messages.SendMessageRequest(
                peer='@bforgame_bot',
                message='–°–ª–µ–ø–∏—Ç—å —Å–Ω–µ–∂–æ–∫'
            ))
            await asyncio.sleep(50 * 60)

    @loader.unrestricted
    async def boffslcmd(self, message: types.Message):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–º–∞–Ω–¥—ã '–°–ª–µ–ø–∏—Ç—å —Å–Ω–µ–∂–æ–∫'"""
        if not self.running_slepit:
            await utils.answer(message, "‚ùåÔ∏è–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã '–°–ª–µ–ø–∏—Ç—å —Å–Ω–µ–∂–æ–∫' —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
            return
        self.running_slepit = False
        await utils.answer(message, "‚úîÔ∏è–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã '–°–ª–µ–ø–∏—Ç—å —Å–Ω–µ–∂–æ–∫' –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

    @loader.unrestricted
    async def bonnacmd(self, message: types.Message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–º–∞–Ω–¥—ã '–ù–∞–π—Ç–∏ —Å–Ω–µ–∂–∏–Ω–∫–∏' –∫–∞–∂–¥—ã–µ 16 –º–∏–Ω—É—Ç"""
        if self.running_nayti:
            await utils.answer(message, self.already_running_nayti_message)
            return
        self.running_nayti = True

        await utils.answer(message, self.success_message)

        while self.running_nayti:
            await message.client(functions.messages.SendMessageRequest(
                peer='@ichigochat',
                message='–ù–∞–π—Ç–∏ —Å–Ω–µ–∂–∏–Ω–∫–∏'
            ))
            await asyncio.sleep(16 * 60)

    @loader.unrestricted
    async def bonoffcmd(self, message: types.Message):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–º–∞–Ω–¥—ã '–ù–∞–π—Ç–∏ —Å–Ω–µ–∂–∏–Ω–∫–∏'"""
        if not self.running_nayti:
            await utils.answer(message, "‚ùåÔ∏è–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã '–ù–∞–π—Ç–∏ —Å–Ω–µ–∂–∏–Ω–∫–∏' —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
            return
        self.running_nayti = False
        await utils.answer(message, "‚úîÔ∏è–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã '–ù–∞–π—Ç–∏ —Å–Ω–µ–∂–∏–Ω–∫–∏' –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
    async def bonoffcmd(self, message: types.Message):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–º–∞–Ω–¥—ã '–ù–∞–π—Ç–∏ —Å–Ω–µ–∂–∏–Ω–∫–∏'"""
        if not self.running_nayti:
            await utils.answer(message, "‚ùåÔ∏è–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã '–ù–∞–π—Ç–∏ —Å–Ω–µ–∂–∏–Ω–∫–∏' —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
            return
        self.running_nayti = False
        await utils.answer(message, "‚úîÔ∏è–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã '–ù–∞–π—Ç–∏ —Å–Ω–µ–∂–∏–Ω–∫–∏' –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
